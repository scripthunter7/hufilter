name: Dead domains PR comments

on:
  issue_comment:
    types:
      - created

jobs:
  handle-keep-comment:
    if: >
      ${{ github.event.issue.pull_request &&
           startsWith(github.event.comment.body, '@keep') &&
           startsWith(github.event.issue.title, 'Automated dead domains fix') &&
           startsWith(github.event.issue.pull_request.head.ref, 'fix/dead-domains-') }}
    name: Revert changes for specified domains
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.issue.pull_request.head.ref }}

      - name: Extract domains to keep
        id: extract-domains
        uses: actions/github-script@v7
        with:
          script: |
            // Parse the comment to extract the domains (e.g., "@keep example.com, example.org")
            const domains = context.payload.comment.body.match(/^@keep (.*)/)[1]
              .split(',')
              .map((domain) => domain.trim());
            core.info(`Domains to keep: ${domains}`);
            core.setOutput('keep_domains', JSON.stringify(domains));

      - name: Revert changes for the specified domains
        id: revert-changes
        uses: actions/github-script@v7
        with:
          script: |
            const keepDomains = JSON.parse(core.getInput('keep_domains'));

            const { data: files } = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });

            for (const file of files) {
              if (file.status === 'modified' || file.status === 'added') {
                core.info(`Checking file: ${file.filename}`);

                // Download file content from the head commit
                const { data: headContent } = await github.rest.repos.getContent({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  path: file.filename,
                  ref: context.payload.pull_request.head.sha,
                });

                const headDecoded = Buffer.from(headContent.content, 'base64').toString('utf8');

                // Revert changes for domains in the keep list
                let revertedContent = headDecoded.split('\n').filter((line) => {
                  return !keepDomains.some((domain) => line.includes(domain));
                }).join('\n');

                // Write the reverted content back
                require('fs').writeFileSync(file.filename, revertedContent, 'utf8');
                core.info(`Reverted changes in file: ${file.filename}`);
              }
            }

      # - name: Commit and push changes
      #   if: success()
      #   run: |
      #     git config user.name "github-actions[bot]"
      #     git config user.email "github-actions[bot]@users.noreply.github.com"
      #     git add -A
      #     git commit -m "Reverted changes for specified domains: ${{ steps.extract-domains.outputs.keep_domains }}"
      #     git push
